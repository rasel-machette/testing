
spring.datasource.url=jdbc:postgresql://localhost:5432/aryadb
spring.datasource.username=postgres
spring.datasource.password=173774
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
spring.jpa.hibernate.ddl-auto=create-drop
spring.datasource.hikari.max-lifetime=600000
spring.datasource.test-on-borrow=true
spring.datasource.hikari.leakDetectionThreshold=2000
spring.jpa.open-in-view=false
logging.level.com.examples=DEBUG

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

# Because detection is disabled you have to set correct dialect by hand.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect

spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Server port information
#server.port = 8085
#
logging.level.root=info
#logging.level.com.geofoliaftp.controllers=debug
#spring.profiles.active=dev
#logging.console=off
logging.pattern.console=%d{dd-MM-yyyy HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n
#logging.path=logs
#logging.file=${D:/spring-boot-logging}/log.log
logging.file.name=D:/spring-boot-logging/api.log
logging.pattern.file=%d{dd-MM-yyyy HH:mm:ss.SSS} [%thread] %-5level %logger{36}.%M - %msg%n
server.port=8084
aryadb.host=http://localhost:8084/response/











